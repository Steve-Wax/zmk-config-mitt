/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
 };
&sk {
     release-after-ms = <2000>;
     quick-release;
 };


/ { 
    combos {
        compatible = "zmk,combos";
        combo_esc { 
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
        combo_1 {
            timeout-ms = <50>;
	    key-positions = <26 27>;
            bindings = <&to 1>;
        };
        
        caps {
            timeout-ms = <50>;
	    key-positions = <24 25>;
            bindings = <&kp CAPS>;
        };
        rshift {
            timeout-ms = <50>;
	    key-positions = <16 17>;
            bindings = <&sk RSHIFT>;
        };
        osl {
            timeout-ms = <50>;
	    key-positions = <3 5>;
            bindings = <&sl 5>;
        };
        
        sqt {
            timeout-ms = <20>;
	    key-positions = <8 9>;
            bindings = <&kp SQT>;
	    layers = <1 5>; 
        };
        bslh {
            timeout-ms = <20>;
	    key-positions = <12	13>;
            bindings = <&kp BSLH>;
	    layers = <1>; 
        };
        lbkt {
            timeout-ms = <20>;
	    key-positions = <22	23>;
            bindings = <&kp LBKT>;
	    layers = <1>; 
        };
        n0 {
            timeout-ms = <20>;
	    key-positions = <22	23>;
            bindings = <&kp N0>;
	    layers = <2>; 
        };

    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_shifts {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFTS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
	td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
		&kp Q		&kp W  	   	&kp E 		&kp R           &kp T						&kp Y    	&kp U    	&kp I                   &kp O           &kp P  
		&hm LGUI A      &hm LALT S  	&hm LCTL D	&kp F           &kp G    		                        &kp H           &hm RCTL J    	&hm RALT K    		&hm RGUI L 	&kp SEMI
		&kp Z	 	&kp X 		&kp C 		&kp V 		&kp B        &mt LCTL TAB     	&kp BSPC        &kp N		&kp M  		&kp  COMMA		&kp DOT		&kp SLASH
          									&mo 1        &mt LSHFT ENTER 	&kp SPACE       &mo 2
		>;
		};

       		left_layer {
		bindings = <
		&none   	&none   	&kp UP 		&none           &kp LPAR					&kp RPAR    	&kp N7    	&kp N8                  &kp N9           &kp N0  
		&hm LGUI LGUI   &hm LALT LEFT  	&hm LCTL DOWN	&kp RIGHT       &kp LBKT    		                        &kp RBKT        &hm RCTL N4   	&hm RALT N5    		&hm RGUI N6 	&kp PLUS
		&none 	        &kp LC(X)	&kp LC(C)       &kp LC(V)	&kp LBRC     &trans     	&trans          &kp RBRC	&kp N1  	&kp  N2 		&kp N3		&kp MINUS
          									&trans       &trans     	&trans          &mo 3
		>;
		};

		right_layer {
		bindings = <
		&kp EXCL	&kp AT 	   	&kp HASH	&kp DOLLAR      &kp PRCNT         				&kp CARET    	&kp AMPS    	&kp ASTRK               &kp LPAR        &kp RPAR  
		&hm LGUI GRAVE  &hm LALT MINUS 	&hm LCTL UNDER	&kp PIPE        &kp UNDER    		                        &kp EQUAL       &hm RCTL PG_UP 	&hm RALT DEL   		&hm RGUI INS 	&kp LOCKING_NUM
		&kp PSCRN 	&kp TILDE	&none 		&kp BSLH	&kp MINUS    &trans     	&trans          &kp PLUS	&kp PG_DN	&kp END 		&kp HOME	&none
          									&mo 3        &trans     	&trans          &trans
		>;
		};

        	both_layer {
		bindings = <
		&kp F1		&kp F2 	   	&kp F3 		&kp F4          &kp F5  					&kp F6    	&kp F7    	&kp F8                  &kp F9          &kp F10
		&hm LGUI F11    &hm LALT F12  	&hm LCTL K_PP	&kp K_MUTE      &kp K_VOL_UP  		                        &none           &bt BT_NXT	&bt BT_PRV             &bt BT_CLR	&none
		&bootloader 	&kp K_STOP	&kp K_PREV	&kp K_NEXT	&kp K_VOL_DN &trans     	&trans          &none		&none  		&none   		&none    	&none
          									&trans       &trans     	&trans          &trans
		>;
		};
	};
};
